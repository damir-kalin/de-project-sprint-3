[2024-02-12 14:06:52,274] {taskinstance.py:1159} INFO - Dependencies all met for <TaskInstance: sales_mart_inc.update_f_customer_retention scheduled__2024-02-07T14:01:59.240675+00:00 [queued]>
[2024-02-12 14:06:52,279] {taskinstance.py:1159} INFO - Dependencies all met for <TaskInstance: sales_mart_inc.update_f_customer_retention scheduled__2024-02-07T14:01:59.240675+00:00 [queued]>
[2024-02-12 14:06:52,280] {taskinstance.py:1356} INFO - 
--------------------------------------------------------------------------------
[2024-02-12 14:06:52,280] {taskinstance.py:1357} INFO - Starting attempt 1 of 1
[2024-02-12 14:06:52,280] {taskinstance.py:1358} INFO - 
--------------------------------------------------------------------------------
[2024-02-12 14:06:52,285] {taskinstance.py:1377} INFO - Executing <Task(PostgresOperator): update_f_customer_retention> on 2024-02-07 14:01:59.240675+00:00
[2024-02-12 14:06:52,288] {standard_task_runner.py:52} INFO - Started process 29003 to run task
[2024-02-12 14:06:52,289] {standard_task_runner.py:79} INFO - Running: ['airflow', 'tasks', 'run', 'sales_mart_inc', 'update_f_customer_retention', 'scheduled__2024-02-07T14:01:59.240675+00:00', '--job-id', '568', '--raw', '--subdir', 'DAGS_FOLDER/sales_mart_inc.py', '--cfg-path', '/tmp/tmp_wratz51', '--error-file', '/tmp/tmp8dixa07p']
[2024-02-12 14:06:52,290] {standard_task_runner.py:80} INFO - Job 568: Subtask update_f_customer_retention
[2024-02-12 14:06:52,320] {task_command.py:369} INFO - Running <TaskInstance: sales_mart_inc.update_f_customer_retention scheduled__2024-02-07T14:01:59.240675+00:00 [running]> on host 91766ce79ef0
[2024-02-12 14:06:52,356] {taskinstance.py:1569} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_EMAIL=student@example.com
AIRFLOW_CTX_DAG_OWNER=student
AIRFLOW_CTX_DAG_ID=sales_mart_inc
AIRFLOW_CTX_TASK_ID=update_f_customer_retention
AIRFLOW_CTX_EXECUTION_DATE=2024-02-07T14:01:59.240675+00:00
AIRFLOW_CTX_TRY_NUMBER=1
AIRFLOW_CTX_DAG_RUN_ID=scheduled__2024-02-07T14:01:59.240675+00:00
[2024-02-12 14:06:52,362] {base.py:68} INFO - Using connection ID 'postgresql_de' for task execution.
[2024-02-12 14:06:52,365] {sql.py:315} INFO - Running statement: with cte1_f_customer_retention as (
	select 
		fs2.id,
		fs2.customer_id,
		dc.date_actual,
		min(dc.date_actual) over (partition by fs2.customer_id) min_date,
		count(id) over (partition by fs2.customer_id, dc.week_of_year) as pay_cnt_of_week,
		dc.first_day_of_week,
		dc.last_day_of_week,
		dc.week_of_year,
		dc.year_actual,
		fs2.item_id,
		fs2.quantity,
		fs2.payment_amount,
		fs2.payment_amount * fs2.quantity as pay
		from mart.f_sales fs2 
			left join mart.d_calendar dc on fs2.date_id = dc.date_id 
		where dc.date_actual::Date = '2024-02-07'
	)
, cte2_f_customer_retention as (
select 
	count(distinct c1.customer_id) filter (where c1.date_actual = c1.min_date) as new_customers_count,
	count(distinct c1.customer_id) filter (where c1.pay_cnt_of_week=2) as returning_customers_count,
	count(distinct c1.customer_id) filter (where c1.payment_amount < 0) as refunded_customer_count,
	concat(to_char(c1.first_day_of_week, 'DD.MM.YYYY'), ' - ', to_char(c1.last_day_of_week, 'DD.MM.YYYY')) as period_name, 
	c1.week_of_year as period_id,
	c1.item_id,
	sum(c1.pay) filter (where c1.date_actual = c1.min_date) as new_customers_revenue,
	sum(c1.pay) filter (where c1.pay_cnt_of_week=2) as returning_customers_revenue,
	count(distinct c1.customer_id) filter (where c1.payment_amount < 0) as customers_refunded
from cte1_f_customer_retention as c1
GROUP BY
        c1.item_id,
        c1.week_of_year,
        c1.year_actual,
        c1.first_day_of_week,
        c1.last_day_of_week)
insert into mart.f_customer_retention (new_customers_count,
	returning_customers_count,
	refunded_customer_count,
	period_name,
	period_id,
	item_id,
	new_customers_revenue,
	returning_customers_revenue,
	customers_refunded)
select new_customers_count,
	returning_customers_count,
	refunded_customer_count,
	period_name,
	period_id,
	item_id,
	new_customers_revenue,
	returning_customers_revenue,
	customers_refunded
from cte2_f_customer_retention
on conflict on constraint f_customer_retention_pk 
do update set
	new_customers_count = EXCLUDED.new_customers_count,
	returning_customers_count = EXCLUDED.returning_customers_count,
	refunded_customer_count = EXCLUDED.refunded_customer_count,
	new_customers_revenue = EXCLUDED.new_customers_revenue,
	returning_customers_revenue = EXCLUDED.returning_customers_revenue,
	customers_refunded = EXCLUDED.customers_refunded, parameters: {'date': ('{{ ds }}',)}
[2024-02-12 14:06:52,368] {sql.py:324} INFO - Rows affected: 12
[2024-02-12 14:06:52,377] {taskinstance.py:1395} INFO - Marking task as SUCCESS. dag_id=sales_mart_inc, task_id=update_f_customer_retention, execution_date=20240207T140159, start_date=20240212T140652, end_date=20240212T140652
[2024-02-12 14:06:52,421] {local_task_job.py:156} INFO - Task exited with return code 0
[2024-02-12 14:06:52,438] {local_task_job.py:273} INFO - 0 downstream tasks scheduled from follow-on schedule check
